@use "sass:map";
:root {
  --offwhite: #e9ecf2;
  --gold: #ffa800;
  --lightest-gray: #dddeea;
  --light-gray: #c8c8d8;
  --dark-gray: 46, 46, 56;
  --blue: #0164ee;
  --interactive: var(--blue);
  --global-bg: var(--lightest-gray);
  --border: var(--light-gray);
  --bg-card: var(--offwhite);
  --bg-checkbox: var(--light-gray);
  --max-screen: 1024px;
  --fonts: system-ui, -apple-system, sans-serif;
  --text-color: rgba(var(--dark-gray), 0.8)
}

body {
  font-family: var(--fonts);
  background-color: var(--global-bg);
  color: var(--text-color);
}

/* ---- Breakpoints ---- */

$breakpoints: (
  "mobile": 375px,
  "tablet": 768px,
  "laptop": 1024px,
);

@mixin responsize($bp) {

  @if map.has-key($breakpoints, $bp) {
    
    $breakpoint: map.get($breakpoints, $bp);

    @media screen and (min-width: $breakpoint) {
      @content;
    }

  } @else {
    @warn 'Invalid breakpoint: #{$bp}.';
  }
}

/* ---- Mobile / Desktop Hidden ---- */

.mobile-hidden {
  visibility: hidden;
  display: none;
}

.desktop-hidden {
  visibility: block;
  display: visible;
}

@include responsize("tablet") {
  .mobile-hidden {
    display: block;
    visibility: visible;
  }
  .desktop-hidden {
    visibility: hidden;
    display: none;
  }
}

/* ---- Icon SVGs ---- */

$star-icon: url(/assets/svg/star-outline.svg);
$checkmark-icon: url(/assets/svg/checkmark-outline.svg);
$search-icon: url(/assets/svg/search-icon.svg);
$menu-icon: url(/assets/svg/menu-24px.svg);

/* ---- Usecase specific styling ---- */

@mixin text-truncate {
  display:inline-block;
  overflow-x: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  line-height: 1.2;
}

@mixin list-item {
  display: flex;
  flex-flow: row nowrap;
  border-radius: 0.5rem;
  height: 100%;
  & * {
    border-radius: 0.5rem;
    display: flex;
    align-items: flex-start;
  }
}

@mixin icon($path) {
  display: block;
  background: rgb(var(--dark-gray));
  width: 1rem;
  height: 1rem;
  pointer-events: none;
  -webkit-mask: $path no-repeat center;
  mask: $path no-repeat center;
}